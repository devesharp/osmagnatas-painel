import { z } from "zod";

/**
 * Schema de validação para os filtros de {{titleCase name}}
 * Define todos os campos disponíveis para filtrar
 */
export const filterSchema = z.object({
  /** Campo de busca geral */
  search: z.string().optional(),
  
  /** Status do item */
  status: z.string().optional(),
  
  // TODO: Adicionar mais campos de filtro conforme necessário
});

/**
 * Tipo inferido do schema de filtros
 */
export type I{{pascalCase name}}Filters = z.infer<typeof filterSchema>;

/**
 * Props do componente principal de filtros
 */
export interface {{pascalCase name}}FiltersProps {
  /** Controla a visibilidade do modal no mobile */
  isVisibleMobile?: boolean;
  /** Callback chamado quando o modal é fechado */
  onRequestClose?: () => void;
  /** Callback chamado quando os filtros são aplicados */
  onFiltersApply: (filters: I{{pascalCase name}}Filters) => void;
  /** Valores iniciais dos filtros */
  filters: Partial<I{{pascalCase name}}Filters>;
} 